name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Check for tests and run
      run: |
        if [ -d "tests" ]; then
          if [ -f "phpunit.xml" ]; then
            echo "Running PHPUnit with configuration..."
            composer phpunit
          else
            echo "Running PHPUnit without configuration..."
            vendor/bin/phpunit tests/ || echo "No tests to run"
          fi
        else
          echo "No tests directory found, skipping tests"
        fi

  php-compatibility:
    runs-on: ubuntu-latest
    name: PHP 7.4 Compatibility
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: PHP 7.4 Compatibility Check
      run: vendor/bin/phpcs --standard=PHPCompatibility --runtime-set testVersion 7.4- src/ roko.php

  wordpress-linting:
    runs-on: ubuntu-latest
    name: WordPress Linting
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Debug - Check if phpcs.xml exists
      run: |
        ls -la
        cat phpcs.xml
        
    - name: Debug - Check PHPCS config
      run: vendor/bin/phpcs --config-show

    - name: Run WordPress Coding Standards
      run: vendor/bin/phpcs --standard=$PWD/phpcs.xml src/ roko.php

  code-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']

    name: PHP ${{ matrix.php-version }} Quality Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, zip
        tools: composer:v2
        coverage: none
        ini-values: memory_limit=256M
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate composer.json
      run: composer validate --strict

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock', '**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-composer-${{ matrix.php-version }}-
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        composer show

    - name: PHP Syntax Check
      run: |
        find src/ -name "*.php" -exec php -l {} \;
        php -l roko.php

    - name: Upload PHPCS results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: phpcs-results-php-${{ matrix.php-version }}
        path: |
          phpcs-report.xml
          php74-compat-report.xml
        retention-days: 5

  security-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Security Audit

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: composer:v2
        coverage: none
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Security Audit
      run: composer audit

  release-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Release Package Test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer:v2
        coverage: none
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Test release script
      run: |
        chmod +x bin/release.sh
        bash -n bin/release.sh

    - name: Validate plugin structure
      run: |
        test -f roko.php
        grep -q "Plugin Name:" roko.php
        grep -q "Version:" roko.php
        grep -q "Description:" roko.php 